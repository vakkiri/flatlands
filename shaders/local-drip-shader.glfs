#version 420
uniform sampler2D texUnit;
uniform float time;
uniform float effectRadius;
uniform float dx;		// x pixel distance from 0,0 on the framebuffer
uniform float dy;		// y pixel distance from 0,0 on the framebuffer

in vec2 texCoord;
layout(location = 0) out vec4 gl_FragColor;

void main() {
	vec2 p1 = texCoord;

	float max_dist = 16.f / 512.f; // move by at most 4 vertical pixels
	float num_waves = 17.f;
	float dist = max_dist;

	float xphase = sin(time) * cos(texCoord.x * num_waves * 2.f);
	float yphase = cos(time) * sin(texCoord.y * num_waves * 2.f);

	float fdx = (texCoord.x * 768.f) - dx - 144.f;
	if ( fdx < 0 )
		fdx *= -1;

	float fdy = (texCoord.y * 512.f) + dy - (464.f);
	if ( fdy < 0 )
		fdy *= -1;

	float fd = ((fdx * fdx) + (fdy * fdy));
	float amt = 0;

	if (fd > 0)
		amt = effectRadius / fd;

	p1.y += sin(time) * amt * dist * (yphase + xphase);

	vec2 coord = p1;
	gl_FragColor = texture( texUnit, coord );

	if (mod((texCoord.y * 512.f), 2.0) < 1.0)
		gl_FragColor.g = (1 - amt) * gl_FragColor.g;

}

