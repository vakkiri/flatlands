/*
 * 	fl_dialogue_box.cpp
 *
 */

#include <iostream>

#include "../rendering/renderer.h"
#include "../rendering/fl_text_surface.h"
#include "fl_dialogue_box.h"
#include "fl_ui_manager.h"

#define S
#define T

FLDialogueBox::FLDialogueBox() : FLDialogueBox("", 0, 0) {}

FLDialogueBox::FLDialogueBox(std::string text, float x, float y)
	: FLUIElement(x, y) {
	messages.push_back(text);
	width = 192;
	height = 64;
	border_size = 8;

	init_textures();

	FLUIManager::getInstance().add_element(this);
	FLUIManager::getInstance().set_active_element(this);
}

void FLDialogueBox::accept() {
	messages.pop_back();

	if (messages.empty()) {
		FLUIManager::getInstance().remove_element(this);
		delete this;
	} else {
	}
}

void FLDialogueBox::init_textures() {
	background = new FLTexturedObject(offset.x, offest.y, width, height);
	background->set_st(0.f, 32.f);
	
	textured_objects.push_back(background);
}

// TODO: this should be replaced with a render() function instead of returning verts wtf lmao
// i see why i thought this may have been a good idea
// but it was quite a bad idea

std::vector<std::vector<FLTexturedObject>>& FLDialogueBox::get_textured_objects() {
	FLTextSurface* text_surface = Renderer::getInstance().get_text_surface();
	float left = offset.x + border_size;
	float right = left + width - border_size - 6;
	float x = offset.x + border_size;
	float y = offset.y + border_size;

	for (auto c : messages.front()) {
		if (x + 3 >= right) {
			x = left;
			y += 12;
		}
		text_surface->add_character(x + 3, y, c);
		x += 5;
	}

	return FLUIElement::get_textured_objects();
}
