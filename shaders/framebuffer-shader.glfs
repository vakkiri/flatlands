#version 420
uniform sampler2D texUnit;
uniform float time;

in vec2 texCoord;
layout(location = 0) out vec4 gl_FragColor;

void main() {
	vec2 coord = texCoord;
	float dx = 2.f/768.f;
	float dy = 2.f/512.f;
	float dx2 = 4.f/768.f;
	float dy2 = 4.f/512.f;
	float y = texCoord.y * 512;

	vec2 left = vec2(texCoord.x - dx, texCoord.y);
	vec2 right = vec2(texCoord.x - dx, texCoord.y);
	vec2 bot = vec2(texCoord.x, texCoord.y + dy);
	vec2 top = vec2(texCoord.x, texCoord.y - dy);

	vec2 left2 = vec2(texCoord.x - dx2, texCoord.y);
	vec2 right2 = vec2(texCoord.x - dx2, texCoord.y);
	vec2 bot2 = vec2(texCoord.x, texCoord.y + dy2);
	vec2 top2 = vec2(texCoord.x, texCoord.y - dy2);

	vec4 leftc = texture( texUnit, left );
	vec4 rightc = texture( texUnit, right );
	vec4 botc = texture( texUnit, bot );
	vec4 topc = texture( texUnit, top );

	vec4 leftc2 = texture( texUnit, left2 );
	vec4 rightc2 = texture( texUnit, right2 );
	vec4 botc2 = texture( texUnit, bot2 );
	vec4 topc2 = texture( texUnit, top2 );


	gl_FragColor = texture( texUnit, coord );

	vec4 blurc = (leftc + rightc + botc + topc) / 4.f;
	vec4 blurc2 = (leftc2 + rightc2 + botc2 + topc2) / 4.f;

	gl_FragColor = (gl_FragColor * 0.8) + (blurc * 0.3);
	gl_FragColor = (gl_FragColor * 0.8) + (blurc2 * 0.2);

	if ( mod(y, 2.f) < 1) {
		gl_FragColor.r *= 0.0;
		gl_FragColor.g *= 0.0;
		gl_FragColor.b *= 0.0;
	}

	float avg = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.f;
	if (avg < 0.4)
		gl_FragColor *= 0.7;
	else if (avg < 0.5)
		gl_FragColor *= 0.8;
	else if (avg < 0.7)
		gl_FragColor *= 1.1;
	else
		gl_FragColor *= 1.3;

	gl_FragColor.a = 1.f;
}

